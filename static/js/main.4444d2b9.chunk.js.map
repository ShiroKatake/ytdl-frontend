{"version":3,"sources":["components/Button.tsx","components/Card.tsx","utils/helpers.js","utils/API.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","disabled","onClick","className","Card","title","videoId","thumbnailUrl","description","handleDownload","href","rel","target","style","backgroundImage","he","decode","React","memo","host","getDownloadUrl","format","isJson","str","JSON","parse","e","waitForOpenConnection","socket","Promise","resolve","reject","currentAttempt","interval","setInterval","maxNumberOfAttempts","clearInterval","Error","readyState","OPEN","isUid","res","match","toMB","i","toFixed","API","axios","create","baseURL","responseType","getSuggestions","searchQuery","a","get","response","data","console","log","getInfos","url","downloadFileFromUrl","videoDownloadUrl","uid","method","then","fileName","headers","exec","window","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","remove","formats","id","name","isChecked","App","useState","inputText","setInputText","downloadFormat","setDownloadFormat","suggestions","setSuggestions","currentVideoInfo","setCurrentVideoInfo","focus","setFocus","downloadProgress","setDownloadProgress","hidden","setHidden","downloaded","setDownloaded","totalSize","setTotalSize","fetchSuggestions","success","undefined","download","videoUrl","downloadUrl","WebSocket","replace","addEventListener","event","total","send","error","videoDetails","setTimeout","type","placeholder","spellCheck","autoComplete","onBlur","onFocus","value","onChange","autoFocus","ProgressBar","striped","variant","now","label","width","height","lineHeight","map","checked","htmlFor","RegExp","test","src","alt","length","video","s","snippet","thumbnails","medium","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4444d2b9.chunk.js","sourcesContent":["interface IButtonProps {\r\n  onClick: () => void;\r\n  disabled: boolean;\r\n}\r\n\r\nconst Button = ({ disabled, onClick }: IButtonProps) => {\r\n  return (\r\n    <>\r\n      <button disabled={disabled} className=\"btn-animate\" onClick={onClick}>\r\n        Search\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport he from \"he\";\r\n\r\ninterface ICardProps {\r\n  title: string;\r\n  videoId: string;\r\n  description: string;\r\n  thumbnailUrl: string;\r\n  handleDownload: (videoId: string) => void;\r\n}\r\n\r\nconst Card = ({ title, videoId, description, thumbnailUrl, handleDownload }: ICardProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <a href={`https://youtube.com/watch?v=${videoId}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n          <div className=\"image\" style={{ backgroundImage: `url(${thumbnailUrl})` }}></div>\r\n          <div className=\"title\">{he.decode(title)}</div>\r\n        </a>\r\n        <button onClick={() => handleDownload(videoId)} className=\"download\">\r\n          Download\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Card);\r\n","// Requires to have the local backend if you wanna run backend\r\n// export const host = \"http://localhost:4000\";\r\nexport const host = \"https://shirokatake-ytdl-backend.herokuapp.com\";\r\n\r\nexport const getDownloadUrl = (videoId, format = \"mp4\") => `${host}/download?v=${videoId}&format=${format}`;\r\n\r\nexport const secondsToMinutes = time => {\r\n  return Math.floor(time / 60) + \":\" + Math.floor(time % 60);\r\n};\r\n\r\nexport const isYtUrl = url => {\r\n  const ytRegex = new RegExp(\r\n    /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(\\?\\S*)?$/\r\n  );\r\n  return ytRegex.test(url);\r\n};\r\n\r\nexport const changeFormatStorage = format => {\r\n  localStorage.setItem(\"format\", format);\r\n};\r\n\r\nexport const extractFileName = str => {\r\n  const regex = /.*filename=['\"]?([^\"]+)/g;\r\n  return regex.exec(str)[1];\r\n};\r\n\r\nexport const isJson = str => {\r\n  try {\r\n    JSON.parse(str);\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const waitForOpenConnection = socket => {\r\n  return new Promise((resolve, reject) => {\r\n    const maxNumberOfAttempts = 10;\r\n    const intervalTime = 200; //ms\r\n\r\n    let currentAttempt = 0;\r\n    const interval = setInterval(() => {\r\n      if (currentAttempt > maxNumberOfAttempts - 1) {\r\n        clearInterval(interval);\r\n        reject(new Error(\"Maximum number of attempts exceeded\"));\r\n      } else if (socket.readyState === socket.OPEN) {\r\n        clearInterval(interval);\r\n        resolve();\r\n      }\r\n      currentAttempt++;\r\n    }, intervalTime);\r\n  });\r\n};\r\n\r\nexport const isUid = str => {\r\n  const regex = /[a-zA-Z0-9]{8}-[a-zA-Z0-9]{4}/g;\r\n  const res = str.match(regex);\r\n  return res ? res[0] : null;\r\n};\r\n\r\nexport const toMB = i => (i / 1024 / 1024).toFixed(2);\r\n","import axios from \"axios\";\r\nimport { host, extractFileName } from \"./helpers\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: host,\r\n  responseType: \"json\",\r\n});\r\n\r\nexport const getSuggestions = async searchQuery => {\r\n  try {\r\n    const response = await API.get(`/suggestions?search=${searchQuery}`);\r\n    const { data } = response;\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.response.data);\r\n  }\r\n};\r\n\r\nexport const getInfos = async url => {\r\n  try {\r\n    const response = await API.get(`/metainfo?url=${url}`);\r\n    const { data } = response;\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error.response.data);\r\n  }\r\n};\r\n\r\nexport const downloadFileFromUrl = async (videoDownloadUrl, uid) => {\r\n  try {\r\n    await axios({\r\n      url: videoDownloadUrl,\r\n      method: \"POST\",\r\n      responseType: \"blob\",\r\n      data: { uid: uid },\r\n    }).then(response => {\r\n      const fileName = extractFileName(response.headers[\"content-disposition\"]);\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n      const link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.setAttribute(\"download\", fileName);\r\n      document.body.appendChild(link);\r\n\r\n      link.click();\r\n      link.remove();\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Card from \"./components/Card\";\nimport { getInfos, getSuggestions, downloadFileFromUrl } from \"./utils/API\";\nimport { host, isYtUrl, getDownloadUrl, isJson, isUid, waitForOpenConnection, toMB } from \"./utils/helpers\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nconst formats = [\n  {\n    id: \"mp4\",\n    name: \"mp4\",\n    isChecked: true,\n  },\n  {\n    id: \"mp3\",\n    name: \"mp3\",\n  },\n  {\n    id: \"mov\",\n    name: \"mov\",\n  },\n  {\n    id: \"flv\",\n    name: \"flv\",\n  },\n];\n\nconst App = () => {\n  const [inputText, setInputText] = useState(\"\");\n  const [downloadFormat, setDownloadFormat] = useState(\"mp4\");\n  const [suggestions, setSuggestions] = useState<any>([]);\n  const [currentVideoInfo, setCurrentVideoInfo] = useState<any>(null);\n  const [focus, setFocus] = useState(false);\n\n  const [downloadProgress, setDownloadProgress] = useState(0);\n  const [hidden, setHidden] = useState(true);\n\n  const [downloaded, setDownloaded] = useState(0);\n  const [totalSize, setTotalSize] = useState(1);\n\n  const checkInput = () => {\n    if (isYtUrl(inputText)) {\n      download(inputText);\n    } else {\n      fetchSuggestions();\n    }\n  };\n\n  const fetchSuggestions = async () => {\n    try {\n      const { data, success } = await getSuggestions(inputText);\n      if (success) {\n        setSuggestions(data);\n        setCurrentVideoInfo(undefined);\n      }\n    } catch (err) {}\n  };\n\n  const download = async (videoId: string) => {\n    setHidden(false);\n    const videoUrl = videoId || inputText;\n    if (!videoUrl) return;\n    const { data, success } = await getInfos(videoUrl);\n    if (success) {\n      const downloadUrl = getDownloadUrl(videoUrl, downloadFormat);\n\n      // Create WebSocket connection.\n      const socket = new WebSocket(`wss://${host.replace(/^https?:\\/\\//i, \"\")}`);\n\n      let uid = \"\";\n\n      // Listen for messages\n      socket.addEventListener(\"message\", event => {\n        if (isUid(event.data)) {\n          uid = isUid(event.data);\n        }\n        if (isJson(event.data)) {\n          const downloadProgress = JSON.parse(event.data);\n          setDownloadProgress((downloadProgress.downloaded / downloadProgress.total) * 100);\n          setDownloaded(downloadProgress.downloaded);\n          setTotalSize(downloadProgress.total);\n        }\n      });\n\n      if (socket.readyState !== socket.OPEN) {\n        try {\n          await waitForOpenConnection(socket);\n          socket.send(uid);\n        } catch (err) {\n          console.error(err);\n        }\n      } else {\n        socket.send(uid);\n      }\n\n      setCurrentVideoInfo(data.videoDetails);\n      console.log(\"Starting download . . .\");\n      await downloadFileFromUrl(downloadUrl, uid);\n      setTimeout(() => {\n        setHidden(true);\n        setDownloadProgress(0);\n      }, 4000);\n    }\n  };\n\n  return (\n    <>\n      <main className=\"container\">\n        <section className=\"search-section\">\n          <div className={`input-container ${focus ? \"animate\" : \"\"}`}>\n            <input\n              type=\"text\"\n              name=\"input\"\n              id=\"text\"\n              placeholder=\"Search or paste url\"\n              spellCheck={false}\n              autoComplete=\"off\"\n              onBlur={() => setFocus(false)}\n              onFocus={() => setFocus(true)}\n              value={inputText}\n              onChange={e => setInputText(e.target.value)}\n              autoFocus\n            />\n          </div>\n          <br />\n          <ProgressBar\n            hidden={hidden}\n            striped\n            variant=\"success\"\n            now={downloadProgress}\n            label={`${downloadProgress !== 100 ? \"Fetching . . .\" : \"Ready! \"} ${toMB(downloaded)}MB /${toMB(totalSize)}MB`}\n            style={{ width: \"85%\", height: \"30px\", lineHeight: \"30px\" }}\n          />\n          <ul className=\"format-list\">\n            {formats.map(format => {\n              return (\n                <li key={format.id}>\n                  <input\n                    type=\"radio\"\n                    id={format.id}\n                    name=\"format\"\n                    checked={downloadFormat === format.id}\n                    value={format.name}\n                    onChange={e => setDownloadFormat(e.target.value)}\n                  />\n                  <label htmlFor={format.id} className=\"radio-label\">\n                    {format.name}\n                  </label>\n                </li>\n              );\n            })}\n          </ul>\n          <Button disabled={!hidden} onClick={checkInput} />\n        </section>\n        {currentVideoInfo && (\n          <section className=\"downloading-section\">\n            <div>\n              <h2>{currentVideoInfo.title}</h2>\n              <br />\n              <img src={`https://i.ytimg.com/vi/${currentVideoInfo.videoId}/hqdefault.jpg`} alt={currentVideoInfo.title} />\n            </div>\n          </section>\n        )}\n        <section className=\"suggestions-section\">\n          {!!suggestions.length && <h1>Suggestions</h1>}\n          <div className=\"grid\">\n            {suggestions.map((video: any) => {\n              const { snippet: s } = video;\n              return (\n                <Card\n                  key={video.id.videoId}\n                  title={s.title}\n                  videoId={video.id.videoId}\n                  description={s.description}\n                  thumbnailUrl={s.thumbnails.medium.url}\n                  handleDownload={() => download(video.id.videoId)}\n                />\n              );\n            })}\n          </div>\n        </section>\n      </main>\n      <footer className=\"footer\"></footer>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}